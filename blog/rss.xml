<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Intellectus Data Fabric Blog</title>
        <link>https://experimenting-to-learn.github.io/publication/blog</link>
        <description>Intellectus Data Fabric Blog</description>
        <lastBuildDate>Wed, 11 Oct 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Serverless]]></title>
            <link>https://experimenting-to-learn.github.io/publication/blog/dev-with-serverless</link>
            <guid>https://experimenting-to-learn.github.io/publication/blog/dev-with-serverless</guid>
            <pubDate>Wed, 11 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Serverless 방식이 추구하는 성과는 상당히 이상 적이다. 유지보수와 변경관리를 쉽게 만들고, 운영 환경에서의 자원 관리를 효율성을 높인다.]]></description>
            <content:encoded><![CDATA[<p>Serverless 방식이 추구하는 성과는 상당히 이상 적이다. 유지보수와 변경관리를 쉽게 만들고, 운영 환경에서의 자원 관리를 효율성을 높인다.
경험에 비추어 봤을 때, 팀 단위로 움직이고 있는 프로젝트에서는 변화의 정도에 비례하여 저항이 발생한다.
Serverless 방식이 제공하는 구조적인 장점을 온전히 취하면서, 프로젝트에 환경에 맞게 최적화 하는 일은 기존에 동작하고 있는 업무 프로세스의 성숙도가 높을수록 높은 수준의 변화를 요구한다.</p><p>코드 작성에 사용하는 툴이나 프로그래밍 언어, 혹은 새로운 개발 프레임워크의 도입은 Serverless 방식을 온전히 적용하는 것에 비하면 단순한 변화라 할 정도다.
이 포스트에서 경험을 바탕으로 다음의 주제에 대해서 생각을 나눠 보고자 한다:</p><ul><li><strong>왜 Serverless 방식을 선택해야 할까?</strong></li><li><strong>바꿔야 하는 것들</strong></li><li><strong>주어진 비즈니스 환경에서 성공에 기여하기 위한 소프트웨어 개발 전략과 기술적인 구현 사례</strong></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="왜-serverless-방식을-선택해야-할까">왜 Serverless 방식을 선택해야 할까?<a href="#왜-serverless-방식을-선택해야-할까" class="hash-link" aria-label="Direct link to 왜 Serverless 방식을 선택해야 할까?" title="Direct link to 왜 Serverless 방식을 선택해야 할까?">​</a></h2><p>왜 해야 하는지  따라서 어떻게 해야 할 것인가가 결정된다.</p><p>소프트웨어 업계에서 'No Silver Bullet'<sup id="fnref-1-2e52ed"><a href="#fn-1-2e52ed" class="footnote-ref">1</a></sup>은 널리 알려진 명제이다. 특정 관점에서 우월할 수 있는 어떤 선택도 다른 관점과 상충(trade-off) 되는 경우는 매우 흔하다.
무엇보다도 소프트웨어 시스템은 순수 창작물이 아니라 비즈니스를 지원하고 혁신하기 위해 사용되기 때문에 비즈니스 환경 변화에 따라 적응해야 하는 것은 필연적이다.
이러한 특성에 비추어 Serverless 방식의 도입의 이유는 단순하고 직관적이다. 비즈니스 환경의 움직임을 자동차와 비교하면 이 생태계는 항상 accelerator-pedal을 힘껏 밟고 있다.
단순히 특정 방향으로 움직이고 있는것이 아니라 항상 가속을 하고 있는 것이다. 역사적으로 이 위태로워 보이는 질주를 지속하는 방법은 감속 장치((brake))를 발전시키는 것이 아니라, 더 단단한 섀시(chassis)와 스테빌라이저(stabilizer)를 보완하면서 동시에 더 빠른 가속 장치를 추가하는 것이다. Serverless 방식은 새로운 가속 장치이다.</p><p>산업 현장에서는 소프트웨어 시스템을 활용해서 비즈니스 기회를 확장하고 실행을 가속화 하고있다. 소프트웨어 제품의 구현과 유지보수도 이러한 속도에 발을 맞춰야 한다. 이 변화는 특정 역량의 강화를 통해 추격하는 것이라기 보다 구조적인 진보를 말한다.</p><p>또 한가지 주목해야 할 것은 클라우드 컴퓨팅이라는 패러다임이다. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="바꿔야-하는-것들">바꿔야 하는 것들<a href="#바꿔야-하는-것들" class="hash-link" aria-label="Direct link to 바꿔야 하는 것들" title="Direct link to 바꿔야 하는 것들">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="주어진-비즈니스-환경에서-성공에-기여하기-위한-소프트웨어-개발-전략과-기술적인-구현-사례">주어진 비즈니스 환경에서 성공에 기여하기 위한 소프트웨어 개발 전략과 기술적인 구현 사례<a href="#주어진-비즈니스-환경에서-성공에-기여하기-위한-소프트웨어-개발-전략과-기술적인-구현-사례" class="hash-link" aria-label="Direct link to 주어진 비즈니스 환경에서 성공에 기여하기 위한 소프트웨어 개발 전략과 기술적인 구현 사례" title="Direct link to 주어진 비즈니스 환경에서 성공에 기여하기 위한 소프트웨어 개발 전략과 기술적인 구현 사례">​</a></h2><p>PoC 수행을 통해 본격적인 구현 단계에 진입하기 전에 여러가지 가설을 검증할 수 있는 데이터가 필요했고, MVP 구현을 통해 내부 이해당사자나 또는 불특정 사용자에게도 우리 아이디어를 노출시켜 피드백을 수집해야 하는 일이 많았다. 요약하자면 빠르고 효율적이어야 했다. 한가지 강조하고 싶은 것은 구현하는 것 자체가 목적이 아니라 구현체를 통해서 아이디어에 대한 데이터를 확보하는 것이 진짜 목적이라는 것이다.</p><p>이러한 작업의 반복은 생각보다 유쾌하지 않다. 단순한 기능이 아니라 아주 좁은 범위 일지라도 비즈니스 시나리오를 실행시켜야 했다. 유의미한 데이터를 확보하기 위해서는 시장에서의 비교 우위를 주장할 수 있을 정도는 아니더라도 일반 사용자들이 일정 시간 머물면서 써볼 수 있을 정도는 돼야 했다. 트래픽이 어느정도 발생해야 데이터에 대한 해석이 가치가 있게 되는 경우들도 있기에 특정 목적의 마케팅이나 홍보 같은 활동을 진행할 수 있도록 시스템이 지속적으로 운영돼야 했다. 클라우드 컴퓨팅 서비스를 전략적으로 활용 했고 가용성이나 성능에 대한 고려를 최소화 했지만 비용은 무시할 수 있는 수준이 아니었다.
이미 알려진 많은 성공 사례에서 민첩하게 비즈니스를 서포트하는 시스템을 어떻게 개발하면 좋은지에 대해서 이야기하고 있지만, 잘 생각해 보면 그런 이야기들은 성공했기 때문에 성립되는 논리 인 경우가 많다. 현실은 아이디어를 아무리 잘 구현해서 치열한 논의 끝에 결정한 우리 브랜드의 도메인에 연결시켜 공개해도 아무일도 일어나지 않는다는 것이다. 팀 내부의 여러 가설을 증명하기 위해 테스트용 트래픽을 발생시키는 또 다른 개발을 하거나, 계속 쏟아져 나오는 여러 개발 및 운영 도구들을 찾아보면서 어떻게 적용시켜야 할지를 고민하면서 스크립트를 작성해야 한다.
그래서 필요한 것은 시간이다. 필요한 구현체를 더 빨리 만들어내고, 또 필요한 무언가를 해야 할 시간 동안 발생하는 비용을 줄이면 무언가를 할 수 있는 시간이 생긴다.</p><p>이 문제에 대한 대안으로 생각한 것이 PoC 혹은 MVP 구현에는 사용량 기반 과금 정책 서비스를 최대한 활용하는 것이었고, 그 중 하나가 Serverless 라는 키워드이다. 그리고 이렇게 구현 해 놓은 상태에서 사용하기 전까지 계속 유지할 수 있다면 필요한 기능들을 Microservice 로 잘 설계해서 재사용 하는 것이다. 서버를 계속 유지할 수 없는 환경에서는 소스코드 레포지토리에서 다시 해당 부분을 복사하거나 패키지를 불러왔어야 했지만 Serverless 서비스에 배포된 Microservice 를 호출하는 방식으로 바뀌는 것이다.</p><div class="footnotes"><hr><ol><li id="fn-1-2e52ed">Frederick P. Brooks Jr., <a href="http://worrydream.com/refs/Brooks-NoSilverBullet.pdf" target="_blank" rel="noopener noreferrer">No Silver Bullet - Essence and Accident in Software Engineering</a><a href="#fnref-1-2e52ed" class="footnote-backref">↩</a></li></ol></div>]]></content:encoded>
            <category>serverless</category>
            <category>aws</category>
            <category>cloud-computing</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://experimenting-to-learn.github.io/publication/blog/welcome</link>
            <guid>https://experimenting-to-learn.github.io/publication/blog/welcome</guid>
            <pubDate>Thu, 26 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus blogging features are powered by the blog plugin.]]></description>
            <content:encoded><![CDATA[<p><a href="https://docusaurus.io/docs/blog" target="_blank" rel="noopener noreferrer">Docusaurus blogging features</a> are powered by the <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog" target="_blank" rel="noopener noreferrer">blog plugin</a>.</p><p>Simply add Markdown files (or folders) to the <code>blog</code> directory.</p><p>Regular blog authors can be added to <code>authors.yml</code>.</p><p>The blog post date can be extracted from filenames, such as:</p><ul><li><code>2019-05-30-welcome.md</code></li><li><code>2019-05-30-welcome/index.md</code></li></ul><p>A blog post folder can be convenient to co-locate blog post images:</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/publication/assets/images/docusaurus-plushie-banner-a60f7593abca1e3eef26a9afa244e4fb.jpeg" width="1500" height="500" class="img_ev3q"></p><p>The blog supports tags as well!</p><p><strong>And if you don't want a blog</strong>: just delete this directory, and use <code>blog: false</code> in your Docusaurus config.</p>]]></content:encoded>
            <category>facebook</category>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[MDX Blog Post]]></title>
            <link>https://experimenting-to-learn.github.io/publication/blog/mdx-blog-post</link>
            <guid>https://experimenting-to-learn.github.io/publication/blog/mdx-blog-post</guid>
            <pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content:encoded>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>